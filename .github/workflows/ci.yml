name: XAAM CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: xaam_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    
    - name: Run backend tests
      run: |
        cd backend
        pytest -xvs tests/
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/xaam_test
        TESTING: true

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test
  
  mcp-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r mcp/requirements.txt
    
    - name: Run MCP tests
      run: |
        cd mcp
        pytest -xvs tests/
      env:
        TESTING: true

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Lint Python code
      run: |
        flake8 backend/ mcp/ --count --select=E9,F63,F7,F82 --show-source --statistics
        black --check backend/ mcp/
        isort --check-only --profile black backend/ mcp/
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Node.js linting dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Lint JavaScript/TypeScript code
      run: |
        cd frontend
        npm run lint

  docker-build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, mcp-tests, lint]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build backend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: false
        tags: xaam-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build frontend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: false
        tags: xaam-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build MCP Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./mcp
        push: false
        tags: xaam-mcp:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max